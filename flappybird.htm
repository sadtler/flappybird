<!DOCTYPE html>
<html>
<head>
 <title>Flappy Bird</title>
   <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
 <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet'>
  <link href='https://fonts.googleapis.com/css?family=Permanent Marker' rel='stylesheet'>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
 </head>
 <body>
 <style>
 @font-face {
  font-family: 'Flappy Birdy';
  font-style: normal;
  font-weight: initial;
  src: local('Flappy Birdy'),
       local('FlappyBirdy'),
       url(font/flappybirdy.ttf) format('truetype');
 }
 

 </style>
<canvas id="myCanvas" width=320 height=480 style="
  background:url('img/flappyback.png');
  background-size: 100%;
  height: 100%;
  padding: 0;
  margin: auto;
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  " 
</canvas>
    <h3> <i onclick="myFunction(this)" class="fa fa-thumbs-up"></i></h3>
<script> 

function myFunction(x) {
    x.classList.toggle("fa-thumbs-down");
}
// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//
 var ctx = myCanvas.getContext("2d"); 
 var FPS = 40;                  
 var jump_amount = -10;              
 var max_fall_speed= +10;             
 var acceleration = 1;          
 var pipe_speed = -2;                
 var game_mode = 'prestart';          
 var time_game_last_running;        
 var bottom_bar_offset = 0;         
 var pipes = [];                      
 var gameover = 0;

 function MySprite (img_url) {
    this.x = 0;
    this.y = 0; 
    this.visible= true;
    this.velocity_x = 0;
    this.velocity_y = 0;
    this.MyImg = new Image();
    this.MyImg.src = img_url || '';
    this.angle = 0;                                 
    this.flipV = false;             
    this.flipH = false;                              
    }
 MySprite.prototype.Do_Frame_Things = function() {
    ctx.save();
    ctx.translate(this.x + this.MyImg.width/2, this.y + this.MyImg.height/2);
    ctx.rotate(this.angle * Math.PI / 180);                       
    if (this.flipV) ctx.scale(1,-1);                              
    if (this.flipH) ctx.scale(-1,1);
    if (this.visible) ctx.drawImage(this.MyImg, -this.MyImg.width/2, -this.MyImg.height/2);
    this.x = this.x + this.velocity_x;
    this.y = this.y + this.velocity_y;                            
    ctx.restore();                                               
    }
 function ImagesTouching(bird1, pipe1) {

	 if (bird1.y <= 0) return true;
     if (bird1.x >= pipe1.x + pipe1.MyImg.width || bird1.x + bird1.MyImg.width <= pipe1.x) return false;  
     if (bird1.y >= pipe1.y + pipe1.MyImg.height || bird1.y + bird1.MyImg.height <= pipe1.y) return false;
     return true;                                                                                            
     }
function Got_Player_Input(MyEvent) {
   switch (game_mode) {
      case 'prestart': {
                        game_mode = 'running';
                        break;
                        } 
      case 'running': {
                        bird.velocity_y = jump_amount;
                        break;
                        } 
      case 'over': if (new Date() - time_game_last_running > 1000) {
                    reset_game();
                    game_mode = 'running';
                    break;
                    } 
       } 
   MyEvent.preventDefault();
   }
 addEventListener("touchstart", Got_Player_Input);     
 addEventListener("mousedown", Got_Player_Input);     
 addEventListener("keydown", Got_Player_Input);     
function make_bird_slow_and_fall() {
    if (bird.velocity_y < max_fall_speed) {
         bird.velocity_y = bird.velocity_y + acceleration;    
         }  
    if (bird.y > myCanvas.height - bird.MyImg.height)  {      
         bird.velocity_y = 0;
         game_mode = 'over';
         }
    }
function add_pipe(x_pos, top_of_gap, gap_width) {             
    var top_pipe = new MySprite();
    top_pipe.MyImg = pipe_piece;                              
    top_pipe.x = x_pos;                                       
    top_pipe.y = top_of_gap - pipe_piece.height;              
    top_pipe.velocity_x = pipe_speed;            
    pipes.push(top_pipe);         
    var bottom_pipe = new MySprite();
    bottom_pipe.MyImg = pipe_piece;
    bottom_pipe.flipV = true;                                
    bottom_pipe.x = x_pos;
    bottom_pipe.y = top_of_gap + gap_width;
    bottom_pipe.velocity_x = pipe_speed;
    pipes.push(bottom_pipe );
    }
function make_bird_tilt_appropriately() {
    if (bird.velocity_y < 0)  {
                 bird.angle= -15;                   
                 }
       else if (bird.angle < 70) {                   
                 bird.angle = bird.angle + 4;        
                 }
    }
function show_the_pipes() {                          
    for (var i=0; i < pipes.length; i++) {
             pipes[i].Do_Frame_Things(); 
             }
    }
function check_for_end_game() {
   for (var i=0; i < pipes.length; i++) 
     if (ImagesTouching(bird, pipes[i])) game_mode = "over";   
   }
function display_intro_instructions () {
    var highscore = localStorage.getItem("highscore");
    if (highscore !== null) {
		ctx.font= "30px Flappy Birdy";
		ctx.textAlign="right";
		ctx.fillText(" Best:" + highscore, myCanvas.width - 10, 25);
	}
   ctx.font= "35px Flappy Birdy";
   ctx.fillStyle= "black";
   ctx.textAlign="center";
   ctx.fillText("Press, touch or click to start", myCanvas.width / 2, myCanvas.height / 4);
   }
function display_game_over () {
   var score = 0;
   var highscore = localStorage.getItem("highscore");
   var played = localStorage.getItem("played");
   
    for (var i=0; i < pipes.length; i++) {
        if (pipes[i].x < bird.x) score = score + 0.5;
	}
	if(highscore !== null){
		if (score > highscore) {
			localStorage.setItem("highscore", score);      
		}
	}
	else{
		localStorage.setItem("highscore", score);
	}
	if(played !== null){
		if (gameover == 0) {
			played++;
			localStorage.setItem("played", played);
		}
	}
	else{
		localStorage.setItem("played", 1);
	}
	gameover = 1;
    ctx.font= "72px Flappy Birdy";
    ctx.fillStyle = "black";
    ctx.textAlign = "center";
    ctx.fillText("Game Over", myCanvas.width / 2, myCanvas.height/2);
	ctx.font= "30px Flappy Birdy";
	ctx.textAlign="center";
    ctx.fillText("Score:" + score, myCanvas.width / 2, 25);
	ctx.textAlign="right";
	ctx.fillText(" Best:" + highscore, myCanvas.width - 10, 25);
	ctx.textAlign="left";
	ctx.fillText("Plays:" + played, 10, 25);
	ctx.font= "35px Flappy Birdy";
	ctx.textAlign="center";
    ctx.font= "30px Flappy Birdy";
    ctx.fillText("Click, touch, or press to play again", myCanvas.width / 2, 300);  
   }
function display_bar_running_along_bottom() {
     if (bottom_bar_offset < -23) bottom_bar_offset = 0;
     ctx.drawImage(bottom_bar, bottom_bar_offset, myCanvas.height - bottom_bar.height);
     }
function reset_game() {
      bird.y = myCanvas.height / 2;
      bird.angle= 0;
      pipes=[];                           // erase all the pipes from the array
      add_all_my_pipes();                 // and load them back in their starting positions 
	  gameover = 0;
      }
function add_all_my_pipes() {
	x = 500;
	z = 140;
	
	for (var i=0; i < 5; i++) {          // Mouth size reduction in 5 stages, base of 140, -20 per stage.
		for (var s=0; s < 5; s++) {      // Five Pipes per stage.
			add_pipe(x, Math.floor(Math.random() * 280) + 20, 140 - (20 * i));
			x = x + Math.floor(Math.random() * 150) + 150;
		}
    }

    var finish_line = new MySprite("img/flappyend.png");
    finish_line.x = x;
    finish_line.velocity_x = pipe_speed;
    pipes.push(finish_line);
    }
 var pipe_piece = new Image();
 pipe_piece.onload = add_all_my_pipes;                       
 pipe_piece.src = "img/flappypipe.png" ;
function Do_a_Frame () {
	if (gameover == 0 || gameover == 2) {                      // Optimize by not repainting when at a terminal state.
		ctx.clearRect(0, 0, myCanvas.width, myCanvas.height);   
		bird.Do_Frame_Things(); 
		display_bar_running_along_bottom();
		switch (game_mode) {
			case 'prestart':{
							display_intro_instructions();
							break;
							} 
			case 'running': {
							time_game_last_running = new Date(); 
							bottom_bar_offset = bottom_bar_offset + pipe_speed; 
							show_the_pipes();
							make_bird_tilt_appropriately();
							make_bird_slow_and_fall();
							check_for_end_game();
							break;
							}
			case 'over': {

							make_bird_tilt_appropriately();
							make_bird_slow_and_fall();
							display_game_over();
							gameover++						   // Gameover has arrived, increase gameover to stop frame repainting until reset. 
							break;
						 } 
			} 
		}
	}
 var bottom_bar = new Image();
 bottom_bar.src = "img/flappybottom.png" ;

 var bird = new MySprite("img/flappybird.png");
 bird.x = myCanvas.width / 3;
 bird.y = myCanvas.height / 2;

 setInterval(Do_a_Frame, 1000/FPS);                            
 </script>  
</body>
</html>
